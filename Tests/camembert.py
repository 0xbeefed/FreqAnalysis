from tkinter import *
from random import *

def drawFamily(char):
    family = data['chars'][char]
    colors = []
    totalValue = family[0]
    startAngle = 0
    chart.create_text(100, 10, text=char + ': ' + str(int(totalValue * 100)) + '%', fill='#333333')
    cache = [];
    for i in range(1, len(family)):
        cache.append(family[i])
    items = sorted(cache, key=lambda x: x[1], reverse=True)
    increment = round(16777215/(len(items))) # on divise 16 777 215  #FFFFFF) par le nombre de donnée voulue
    for i in range(len(items)):
        colors.append('#' + str(format(increment*i, '08x')[0:6])) # creation d'un hexa a 6 digits pour la couleur
        degrees = (items[i][1]/totalValue) * 360 # calcul du poucentage de la famille que l'item represente
        print(degrees)
        if (degrees > 0.1): # l'affichage d'un arc de moins de 0.1° provoque un bug graphique
            chart.create_arc(20, 20, 180, 180, style='pieslice', start=startAngle, extent=degrees, outline='', fill=colors[i])
            startAngle += degrees
        if (int((items[i][1]/totalValue) * 100)) < 0.1:
            value = '< 0.1%'
        elif (int((items[i][1]/totalValue) * 100) == 100):
            chart.create_oval(20, 20, 180, 180, fill='#4fade3')
            value = '100%'
        else:
            value = str((int((items[i][1]/totalValue) * 100))) + '%'
        chart.create_text(100, 200 + i * 15, text=items[i][0] + ': ' + value, fill=colors[i])
        chart.update()
        

data = {'lenght': 171816, 'chars': {'q': [0.008613865996181962, ['q', 0.008613865996181962]], 'x': [0.003561949993015784, ['x', 0.003561949993015784]], 'z': [0.001600549424966243, ['z', 0.001600549424966243]], 'h': [0.012926619174000092, ['h', 0.012926619174000092]], 'c': [0.02448549611211994, ['c', 0.024275969641942542], ['ç', 0.00020952647017739908]], 'f': [0.011040880942403502, ['f', 0.011040880942403502]], 'l': [0.05204986729990222, ['l', 0.05204986729990222]], 'w': [5.820179727149974e-06, ['w', 5.820179727149974e-06]], 'e': [0.1655084509009638, ['ê', 0.0009661498347068957], ['é', 0.016121897844205427], ['ë', 0.0005063556362620478], ['e', 0.14258276295572006], ['è', 0.005331284630069376]], 's': [0.07086068817805094, ['s', 0.07086068817805094]], 'p': [0.023047911719513897, ['p', 0.023047911719513897]], 't': [0.07878195278670205, ['t', 0.07878195278670205]], 'u': [0.05124668249755552, ['ü', 0.0004772547376262979], ['û', 0.00011640359454299948], ['u', 0.050350374819574426], ['ù', 0.0003026493458117987]], 'ponc': [0.04679424500628579, [';', 0.0047434464776272296], ['!', 0.0004015924011733482], [':', 0.007153000884667318], ['.', 0.012152535270289146], [',', 0.021493923732364854], ['?', 0.0008497462401638962]], 'o': [0.044442892396517206, ['o', 0.04427410718442985], ['ô', 0.00016878521208734925]], 'other': [0.022430972668435998, ['#', 5.820179727149974e-06], ['…', 4.6561437817199795e-05], ['-', 0.0035444894538343343], [')', 0.0001396843134515994], [']', 0.000896307677981096], ['’', 0.011535596219211249], ['—', 0.001990501466685291], ['(', 0.0001396843134515994], ['[', 0.000896307677981096], ['œ', 0.0002677282674488988], ['*', 0.002968291660846487]], 'd': [0.03243004143967966, ['d', 0.03243004143967966]], 'chif': [0.019165851841504863, ['0', 0.0010127112725240956], ['2', 0.003864599338827583], ['3', 0.00225822973413419], ['9', 0.0009836103738883456], ['8', 0.0010592727103412953], ['5', 0.0012979000791544443], ['7', 0.0010010709130697955], ['4', 0.0015598081668761932], ['1', 0.004929692228896028], ['6', 0.0011989570237928948]], 'r': [0.0569620989896168, ['r', 0.0569620989896168]], 'a': [0.08127298970992224, ['â', 0.0010243516319783956], ['à', 0.005139218699073428], ['a', 0.07510941937887042]], 'm': [0.025992922661451787, ['m', 0.025992922661451787]], 'j': [0.008002747124831214, ['j', 0.008002747124831214]], 'v': [0.017594403315174374, ['v', 0.017594403315174374]], 'n': [0.05811449457559249, ['n', 0.05811449457559249]], 'b': [0.00917260324998836, ['b', 0.00917260324998836]], 'i': [0.06330609489221027, ['ï', 0.0005179959957163477], ['î', 0.00035503096335614843], ['i', 0.06243306793313778]], 'g': [0.006506960934953672, ['g', 0.006506960934953672]], 'y': [0.003369884062019835, ['y', 0.003369884062019835]], 'k': [0.0007100619267122969, ['k', 0.0007100619267122969]]}, 'ordering': ['e', 'a', 't', 's', 'i', 'n', 'r', 'l', 'u', 'ponc', 'o', 'd', 'm', 'c', 'p', 'other', 'chif', 'v', 'h', 'f', 'b', 'q', 'j', 'g', 'x', 'y', 'z', 'k', 'w']}
    
root = Tk()

chart = Canvas(root, width=200, height=600, bg='#ffffff')
chart.pack()

drawFamily('other')

root.mainloop()
